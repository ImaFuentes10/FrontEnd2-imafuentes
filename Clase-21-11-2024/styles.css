/* Reset básico */

body {
    font-family: Arial, Helvetica, sans-serif;
    margin: 0%;
    padding: 0%;
    background-color: beige;
    color: #333;
}

header {
    text-align: center;
    background-color: cadetblue;
    color:aliceblue;
    padding: 20px;
}

section {
    border: 2px solid burlywood;
    /* valores para la propiedad border en orden: grosor, estilo, color */
    background-color:lightgray;
    padding: 15px;
    margin: 20px;
    border-radius: 15px;
}

h2 {
    color:firebrick;
}

.box {
    background-color:lightblue;
    border: 1px solid darkblue;
    padding: 10px;
    margin: 10px auto;
    /* valor auto en la propiedad margin hace que el navegador calcule el espacio 
    necesario para centrar un elemento en su contenedor padre. El elemento debe 
    tener ancho definido. Esta manera de centrar los elementos SÒLO APLICA HORIZONTAL */
    text-align: center;
}

.block {
    display: block;
    width: 150px;
    height: 30px;
    border-radius: 5px;
}

.inline {
    display: inline;
    width: 150px;
    height: 30px;
    /* width y height se ignoran porque los elementos inline los ignoran */
}

.inline-block {
    display: inline-block;
    width: 150px;
    height: 30px;
    /* width y height se ignoran porque los elementos inline los ignoran */
}

.model {
    margin: 20px;
    padding: 20px;
    border: 10px solid darkblue;
}

.content-box {
    box-sizing: content-box;
    margin: 10px;
    padding: 20px;
    border: 10px solid darkblue;
    background-color: lightblue;
    width: 200px;
}
/* Vemnos que aunque tengan el mismo width, cuando se despliega los elemntos tienen
diferentes tamaños. Content-box es más grande por que toma el valor de width para 
el contenido del elemento, mientras que border-box lo toma para todo el elemento */
.border-box {
    box-sizing: border-box;
    margin: 10px;
    padding: 20px;
    border: 10px solid darkblue;
    background-color: lightblue;
    width: 200px;
}